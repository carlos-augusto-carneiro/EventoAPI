// <auto-generated />
using System;
using Evento_INFRASTRUCTURE.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Evento_INFRASTRUCTURE.Persistence.Migrations
{
    [DbContext(typeof(EventoDbContext))]
    [Migration("20240623203155_Init01")]
    partial class Init01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Evento_CORE.Entitys.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Email")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Nome")
                        .HasColumnOrder(2);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("Role")
                        .HasColumnOrder(5);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Administradors");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDoEvento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data")
                        .HasColumnOrder(3);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Descricao")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdAdm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxConvidados")
                        .HasColumnType("int")
                        .HasColumnName("Convidados")
                        .HasColumnOrder(4);

                    b.Property<string>("NameEvent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome")
                        .HasColumnOrder(1);

                    b.Property<float>("Preco")
                        .HasColumnType("real")
                        .HasColumnName("Preco")
                        .HasColumnOrder(6);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("IdAdm");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DataDeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Email")
                        .HasColumnOrder(4);

                    b.Property<Guid>("IdEvento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Nome")
                        .HasColumnOrder(2);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("Role")
                        .HasColumnOrder(5);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Evento", b =>
                {
                    b.HasOne("Evento_CORE.Entitys.Administrador", "Administrador")
                        .WithMany("Evento")
                        .HasForeignKey("IdAdm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Usuario", b =>
                {
                    b.HasOne("Evento_CORE.Entitys.Evento", "Evento")
                        .WithMany("Usuario")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Administrador", b =>
                {
                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Evento_CORE.Entitys.Evento", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
